# Generated by Django 3.1.2 on 2021-03-08 09:34

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('child_management', '0015_auto_20210305_1109'),
    ]

    operations = [
         migrations.RunSQL('drop view if exists dash_child_days_lastvisit_view'),
         migrations.RunSQL('drop view if exists dash_recommended_adoption_view'),
         migrations.RunSQL('drop view if exists dash_child_cci_category'),
         migrations.RunSQL('drop view if exists rep_child_details_view'),
         migrations.RunSQL('drop view if exists rep_child_baseline_report'),
         migrations.RunSQL('drop view if exists dash_child_days_lastreview_view'),
         migrations.RunSQL('drop view if exists dash_child_cci_stay_view'),
         migrations.RunSQL("""create or replace view dash_child_days_lastvisit_view as 
                                select mds.id as state_id, mds.name as state_name, 
                                mdd.id as district_id, mdd.name as district_name, 
                                sh.id as shelter_home_id, sh.name as shelter_homename, 
                                csr.child_id,
                                case when cft.child_id is null then -1 else 
                                ( extract( year  from (age(now()::TIMESTAMP, cft.last_visit_date::TIMESTAMP))) * 12 + 
                                extract( month  from (age(now()::TIMESTAMP, cft.last_visit_date::TIMESTAMP)))) end as num_months_last_visit
                                from child_management_child cc 
                                inner join (
                                    select row_number() over (partition by child_id order by date_of_admission desc) as shelter_num, shelter_home_id, child_id, admission_number, date_of_admission
                                    from  child_management_childshelterhomerelation 
                                    where active = 2
                                ) csr on cc.id = csr.child_id and csr.shelter_num = 1 and cc.active = 2
                                inner join master_data_shelterhome sh on csr.shelter_home_id = sh.id
                                inner join master_data_district mdd on sh.district_id = mdd.id and sh.active = 2 
                                inner join master_data_state mds on mdd.state_id = mds.id
                                left outer join (
                                    select child_id, max(date_of_visit) as last_visit_date
                                    from child_management_familyvisit 
                                    group by child_id
                                ) as cft on cft.child_id = cc.id"""
        ),
        migrations.RunSQL("""create or replace view dash_recommended_adoption_view as 
                                select mds.id as state_id, mds.name as state_name, 
                                mdd.id as district_id, mdd.name as district_name, 
                                sh.id as shelter_home_id, sh.name as shelter_homename, 
                                csr.child_id,
                                cc.date_declaring_child_free_for_adoption as reco_ready_date,
                                to_char(cc.date_declaring_child_free_for_adoption, 'Mon ''YY') as reco_ready_month
                                from child_management_child cc
                                inner join (
                                    select row_number() over (partition by child_id order by date_of_admission desc) as shelter_num, shelter_home_id, child_id, admission_number, date_of_admission
                                    from  child_management_childshelterhomerelation 
                                    where active = 2
                                ) csr on cc.id = csr.child_id and csr.shelter_num = 1 and cc.active = 2
                                inner join master_data_shelterhome sh on csr.shelter_home_id = sh.id 
                                inner join master_data_district mdd on sh.district_id = mdd.id and sh.active = 2 
                                inner join master_data_state mds on mdd.state_id = mds.id
                                left outer join (
                                    select child_id, row_number() over (partition by child_id order by flagged_date desc) as flagging_num, flagged_status
                                    from  child_management_childflaggedhistory 
                                    where active = 2
                                ) as cfh on cfh.child_id = cc.id and cfh.flagged_status = 2 and flagging_num = 1"""
        ),
        migrations.RunSQL("""create or replace view dash_child_cci_category as 
                                select mds.id as state_id, mds.name as state_name, 
                                mdd.id as district_id, mdd.name as district_name, 
                                sh.id as shelter_home_id, sh.name as shelter_homename, 
                                sum(shch.child_count) as child_count,
                                sum(cc.abandoned_count) as abandoned_count,
                                sum(cc.fam_not_trace_count) as fam_not_trace_count,
                                sum(cc.surrendered_count) as surrendered_count,
                                sum(cc.was_trafficked_count) as was_trafficked_count,
                                sum(cc.orp_no_guardian_count) as orp_no_guardian_count,
                                sum(cc.orp_fit_guardian_count) as orp_fit_guardian_count,
                                sum(cc.unfit_guardian_poverty_count) as unfit_guardian_poverty_count,
                                sum(cc.unfit_guardian_addict_count) as unfit_guardian_addict_count,
                                sum(cc.unfit_guardian_abuse_count) as unfit_guardian_abuse_count,
                                sum(cc.unfit_guardian_criminal_count) as unfit_guardian_criminal_count,
                                sum(cc.unfit_guardian_unsound_count) as unfit_guardian_unsound_count,
                                sum(cc.unfit_guardian_needcare_count) as unfit_guardian_needcare_count,
                                sum(cc.unfit_guardian_unwilling_count) as unfit_guardian_unwilling_count,
                                sum(cc.fit_parent_count) as fit_parent_count,
                                sum(cc.unfit_parent_poverty_count) as unfit_parent_poverty_count,
                                sum(cc.unfit_parent_single_count) as unfit_parent_single_count,
                                sum(cc.unfit_parent_addict_count) as unfit_parent_addict_count,
                                sum(cc.unfit_parent_abuse_count) as unfit_parent_abuse_count,
                                sum(cc.unfit_parent_criminal_count) as unfit_parent_criminal_count,
                                sum(cc.unfit_parent_unsound_count) as unfit_parent_unsound_count,
                                sum(cc.unfit_parent_needcare_count) as unfit_parent_needcare_count,
                                sum(cc.unfit_parent_unwilling_count) as unfit_parent_unwilling_count
                                from master_data_shelterhome sh
                                inner join master_data_district mdd on sh.district_id = mdd.id and sh.active = 2 
                                inner join master_data_state mds on mdd.state_id = mds.id
                                inner join (
                                    select shelter_home_id, count(distinct child_id) child_count
                                    from (select row_number() over (partition by child_id order by date_of_admission desc) as shelter_num, shelter_home_id, child_id, admission_number, date_of_admission
                                        from  child_management_childshelterhomerelation 
                                        where active = 2) as x
                                    where shelter_num  = 1
                                    group by shelter_home_id
                                ) as shch on shch.shelter_home_id = sh.id
                                left outer join ( 
                                    select shelter_home_id, 
                                    sum(case when childclassification_id = 2 then child_clasification_count else 0 end) as abandoned_count,
                                    sum(case when childclassification_id = 3 then child_clasification_count else 0 end) as fam_not_trace_count,
                                    sum(case when childclassification_id = 4 then child_clasification_count else 0 end) as surrendered_count,
                                    sum(case when childclassification_id = 5 then child_clasification_count else 0 end) as was_trafficked_count,
                                    sum(case when childclassification_id = 6 then child_clasification_count else 0 end) as orp_no_guardian_count,
                                    sum(case when childclassification_id = 7 then child_clasification_count else 0 end) as orp_fit_guardian_count,
                                    sum(case when childclassification_id = 8 then child_clasification_count else 0 end) as unfit_guardian_poverty_count,
                                    sum(case when childclassification_id = 9 then child_clasification_count else 0 end) as unfit_guardian_addict_count,
                                    sum(case when childclassification_id = 10 then child_clasification_count else 0 end) as unfit_guardian_abuse_count,
                                    sum(case when childclassification_id = 11 then child_clasification_count else 0 end) as unfit_guardian_criminal_count,
                                    sum(case when childclassification_id = 12 then child_clasification_count else 0 end) as unfit_guardian_unsound_count,
                                    sum(case when childclassification_id = 13 then child_clasification_count else 0 end) as unfit_guardian_needcare_count,
                                    sum(case when childclassification_id = 14 then child_clasification_count else 0 end) as unfit_guardian_unwilling_count,
                                    sum(case when childclassification_id = 15 then child_clasification_count else 0 end) as fit_parent_count,
                                    sum(case when childclassification_id = 16 then child_clasification_count else 0 end) as unfit_parent_poverty_count,
                                    sum(case when childclassification_id = 17 then child_clasification_count else 0 end) as unfit_parent_single_count,
                                    sum(case when childclassification_id = 18 then child_clasification_count else 0 end) as unfit_parent_addict_count,
                                    sum(case when childclassification_id = 19 then child_clasification_count else 0 end) as unfit_parent_abuse_count,
                                    sum(case when childclassification_id = 20 then child_clasification_count else 0 end) as unfit_parent_criminal_count,
                                    sum(case when childclassification_id = 21 then child_clasification_count else 0 end) as unfit_parent_unsound_count,
                                    sum(case when childclassification_id = 22 then child_clasification_count else 0 end) as unfit_parent_needcare_count,
                                    sum(case when childclassification_id = 23 then child_clasification_count else 0 end) as unfit_parent_unwilling_count
                                    from (
                                        select shelter_home_id, childclassification_id, count(*) as child_clasification_count
                                        from child_management_child_child_classification ccc 
                                        inner join child_management_child cc on cc.active = 2 and ccc.child_id = cc.id
                                        inner join (
                                            select row_number() over (partition by child_id order by date_of_admission desc) as shelter_num, shelter_home_id, child_id, admission_number, date_of_admission
                                            from  child_management_childshelterhomerelation 
                                            where active = 2
                                        ) csr on ccc.child_id = csr.child_id and csr.shelter_num = 1
                                        group by shelter_home_id, childclassification_id
                                    ) as x
                                    group by x.shelter_home_id
                                ) as cc on cc.shelter_home_id = sh.id
                                group by mds.id,mds.name,mdd.id,mdd.name,sh.id,sh.name"""
        ),
        migrations.RunSQL("""create or replace view dash_child_cci_stay_view as 
                                select mds.id as state_id, mds.name as state_name, 
                                mdd.id as district_id, mdd.name as district_name, 
                                sh.id as shelter_home_id, sh.name as shelter_homename, 
                                csr.child_id,
                                extract( year  from (age(date_of_exit::TIMESTAMP, date_of_admission::TIMESTAMP))) * 12 + 
                                extract( month  from (age(date_of_exit::TIMESTAMP, date_of_admission::TIMESTAMP))) as stay_in_months
                                from child_management_child cc 
                                inner join (
                                    select child_id, shelter_home_id, date_of_admission, coalesce(date_of_exit, coalesce(lag(date_of_admission,-1) over(partition by child_id order by date_of_admission asc)),now()) as date_of_exit
                                    from child_management_childshelterhomerelation shh
                                    where active = 2 
                                ) csr on  cc.id = csr.child_id and cc.active = 2
                                inner join master_data_shelterhome sh on sh.id = csr.shelter_home_id
                                inner join master_data_district mdd on sh.district_id = mdd.id and sh.active = 2 
                                inner join master_data_state mds on mdd.state_id = mds.id"""
        ),
        migrations.RunSQL("""create or replace view dash_child_days_lastreview_view as 
                                select mds.id as state_id, mds.name as state_name, 
                                mdd.id as district_id, mdd.name as district_name, 
                                sh.id as shelter_home_id, sh.name as shelter_homename, 
                                csr.child_id,
                                extract( year  from (age(now()::TIMESTAMP, cch.last_review_date::TIMESTAMP))) * 12 + 
                                extract( month  from (age(now()::TIMESTAMP, cch.last_review_date::TIMESTAMP))) as num_months_last_review
                                from child_management_child cc 
                                inner join (
                                    select row_number() over (partition by child_id order by date_of_admission desc) as shelter_num, shelter_home_id, child_id, admission_number, date_of_admission
                                    from  child_management_childshelterhomerelation 
                                    where active = 2
                                ) csr on cc.id = csr.child_id and csr.shelter_num = 1 and cc.active = 2
                                inner join master_data_shelterhome sh on csr.shelter_home_id = sh.id
                                inner join master_data_district mdd on sh.district_id = mdd.id and sh.active = 2 
                                inner join master_data_state mds on mdd.state_id = mds.id
                                inner join (
                                    select child_id, max(last_date_of_cwc_order_or_review) as last_review_date
                                    from child_management_childcwchistory 
                                    group by child_id
                                ) as cch on cch.child_id = cc.id"""
        ),
        migrations.RunSQL("""create or replace view rep_child_details_view as 
                                select 
                                concat(coalesce(ch.first_name,''), ' ', coalesce(ch.middle_name,' '), ' ', coalesce(ch.last_name,'')) as child_name,
                                ch.case_number,
                                (case when ch.dob is null then '' else to_char(ch.dob, 'DD-MM-YYYY') end) as dob,
                                extract( year  from (age(now()::TIMESTAMP, ch.dob::TIMESTAMP))) as age_year,
                                extract( month  from (age(now()::TIMESTAMP, ch.dob::TIMESTAMP))) as age_plus_months,
                                (case when ch.sex = 1 then 'Male' when ch.sex = 2 then 'Female' when ch.sex = 3 then 'Intersex' when ch.sex = 4 then 'Transgender' when ch.sex = 5 then 'Other' else '' end) as gender,
                                (case when ch.date_declaring_child_free_for_adoption is null then 'NA' else to_char(ch.date_declaring_child_free_for_adoption, 'DD-MM-YYYY') end) as free_for_adoption,
                                (case when ch.date_declaring_child_free_for_adoption is null then 0 else extract( year  from (age(now()::TIMESTAMP, ch.date_declaring_child_free_for_adoption::TIMESTAMP))) end) as adoption_pending_years,
                                (case when ch.date_declaring_child_free_for_adoption is null then 0 else extract( month  from (age(now()::TIMESTAMP, ch.date_declaring_child_free_for_adoption::TIMESTAMP))) end) as adoption_pending_months,
                                case when fv.most_recent_visit_date is not null then to_char(fv.most_recent_visit_date, 'DD-MM-YYYY') else 'No Family Visits' end as last_family_visit,
                                (case when cg.child_id is null then 'No' else 'Yes' end) as guardian_listed,
                                cc.classification, 
                                (case when cs.stay_in_months = 0 then 'NA' else ((case when cs.stay_in_months >= 12 and cs.stay_in_months <24 then floor((cs.stay_in_months/12)::numeric) || ' year and '
                                    when cs.stay_in_months >= 24 then floor((cs.stay_in_months/12)::numeric) || ' years and ' 
                                end) || (cs.stay_in_months::int % 12) || ' month' || (case when (cs.stay_in_months::int % 12) > 1 then 's' else '' end)) end) as shelter_home_stay,
                                (case when cr.num_months_last_review = 0 then 'NA' else ((case when cr.num_months_last_review >= 12 and cr.num_months_last_review <24 then floor((cr.num_months_last_review/12)::numeric) || ' year and '
                                    when cr.num_months_last_review >= 24 then floor((cr.num_months_last_review/12)::numeric) || ' years and ' 
                                end) || (cr.num_months_last_review::int % 12) || ' month' || (case when (cr.num_months_last_review::int % 12) > 1 then 's' else '' end)) end) as last_cwc_review_duration,
                                fh.flagging_reason,
                                (case when csh.date_of_admission is null then 'NA' else to_char(csh.date_of_admission, 'DD-MM-YYYY') end) as date_of_admission,
                                csh.admission_number,
                                sh.name as shelter_home_name,
                                sh.id as shelter_home_id,
                                mdd.name as district_name,
                                mdd.id as district_id,
                                mds.name as state_name,
                                mds.id as state_id
                                from child_management_child ch
                                inner join (
                                    select row_number() over (partition by child_id order by date_of_admission desc) as shelter_num, shelter_home_id, child_id, admission_number, date_of_admission
                                    from  child_management_childshelterhomerelation 
                                    where active = 2
                                ) as csh on csh.child_id = ch.id and csh.shelter_num = 1 
                                inner join master_data_shelterhome sh on sh.id = csh.shelter_home_id
                                inner join master_data_district mdd on mdd.id = sh.district_id
                                inner join master_data_state mds on mds.id = mdd.state_id
                                left outer join (
                                    select child_id, max(date_of_visit) as most_recent_visit_date
                                    from child_management_familyvisit
                                    group by child_id
                                ) as fv on ch.id = fv.child_id
                                left outer join (select distinct child_id from child_management_guardian where active = 2) as cg on ch.id = cg.child_id
                                left outer join (
                                    select child_id, string_agg(x2.name, ', ') as classification
                                    from child_management_child_child_classification x1
                                    inner join master_data_childclassification x2 on x1.childclassification_id = x2.id and x2.active = 2
                                    group by child_id
                                ) as cc on ch.id = cc.child_id
                                left outer join (select child_id, sum(stay_in_months) as stay_in_months
                                    from dash_child_cci_stay_view 
                                    group by child_id
                                ) as cs on cs.child_id = ch.id
                                left outer join dash_child_days_lastreview_view cr on cr.child_id = ch.id 
                                left outer join (
                                    select child_id, row_number() over(partition by child_id order by flagged_date desc) as flag_num, reason_for_flagging as flagging_reason
                                    from child_management_childflaggedhistory 
                                ) as fh on fh.child_id = ch.id and fh.flag_num = 1"""
        ),
        migrations.RunSQL("""create or replace view rep_child_baseline_report as 
                                select 
                                mds.id as state_id,
                                mds.name as state_name,
                                mdd.id as district_id,
                                mdd.name as district_name,
                                sh.id as shelter_home_id,
                                sh.name as shelter_home_name,
                                ch.case_number,
                                coalesce(ch.first_name,'') as first_name, 
                                coalesce(ch.middle_name,'') as middle_name,
                                coalesce(ch.last_name,'') as last_name,
                                (case when ch.dob is null then '' else to_char(ch.dob, 'DD-MM-YYYY') end) as dob,
                                (case when ch.sex = 1 then 'Male' when ch.sex = 2 then 'Female' when ch.sex = 3 then 'Intersex' when ch.sex = 4 then 'Transgender' when ch.sex = 5 then 'Other' else '' end) as gender,
                                cc.classification, 
                                (case when cfh.flagged_status = 2 then 'Yes' else 'No' end) reco_adoption_inquiry,
                                csh.admission_number,
                                (case when csh.date_of_admission is null then '' else to_char(csh.date_of_admission, 'DD-MM-YYYY') end) as date_of_admission,
                                cg.name as guardian_name,
                                mdr.name as guardian_relation,
                                (case when cch.last_review_date is null then '' else to_char(cch.last_review_date, 'DD-MM-YYYY') end) as last_review_date,
                                (case when ch.cwc_started_the_process_of_declaring is null then '' else to_char(ch.cwc_started_the_process_of_declaring, 'DD-MM-YYYY') end) as cwc_started_adpotion_inquiry,
                                ch.cwc_order_number as cwc_order_number,
                                (case when ch.date_declaring_child_free_for_adoption is null then '' else to_char(ch.date_declaring_child_free_for_adoption, 'DD-MM-YYYY') end) as date_declaring_child_free_for_adoption
                                from child_management_child ch
                                inner join (
                                    select row_number() over (partition by child_id order by date_of_admission desc) as shelter_num, shelter_home_id, child_id, admission_number, date_of_admission
                                    from  child_management_childshelterhomerelation 
                                    where active = 2
                                ) as csh on csh.child_id = ch.id and csh.shelter_num = 1 
                                inner join master_data_shelterhome sh on sh.id = csh.shelter_home_id
                                inner join master_data_district mdd on mdd.id = sh.district_id
                                inner join master_data_state mds on mds.id = mdd.state_id
                                left outer join (
                                    select child_id, string_agg(x2.name, ', ') as classification
                                    from child_management_child_child_classification x1
                                    inner join master_data_childclassification x2 on x1.childclassification_id = x2.id and x2.active = 2
                                    group by child_id
                                ) as cc on ch.id = cc.child_id
                                left outer join (
                                    select child_id, row_number() over (partition by child_id order by id desc) as guardian_num, name, relationship_id
                                    from child_management_guardian 
                                ) cg on cg.child_id = ch.id and cg.guardian_num = 1
                                left outer join master_data_relationship mdr on mdr.id = cg.relationship_id
                                left outer join (
                                        select child_id, max(last_date_of_cwc_order_or_review) as last_review_date
                                        from child_management_childcwchistory 
                                        group by child_id
                                ) as cch on cch.child_id = ch.id
                                left outer join (
                                    select child_id, row_number() over (partition by child_id order by flagged_date desc) as flagging_num, flagged_status
                                    from  child_management_childflaggedhistory 
                                    where active = 2
                                ) as cfh on cfh.child_id = ch.id and flagging_num = 1"""
        ),
        migrations.RunSQL("""create or replace view dash_child_adpotion_status_view as 
                                select mds.id as state_id, mds.name as state_name, 
                                mdd.id as district_id, mdd.name as district_name, 
                                sh.id as shelter_home_id, sh.name as shelter_homename, 
                                csr.child_id,
                                cfh.flagged_status
                                from child_management_child cc 
                                inner join (
                                    select row_number() over (partition by child_id order by date_of_admission desc) as shelter_num, shelter_home_id, child_id, admission_number, date_of_admission
                                    from  child_management_childshelterhomerelation 
                                    where active = 2
                                ) as csr on cc.id = csr.child_id and cc.active = 2 and csr.shelter_num = 1 
                                inner join master_data_shelterhome sh on csr.shelter_home_id = sh.id
                                inner join master_data_district mdd on sh.district_id = mdd.id
                                inner join master_data_state mds on mdd.state_id = mds.id
                                left outer join (
                                    select child_id, row_number() over (partition by child_id order by flagged_date desc) as flagging_num, flagged_status
                                    from  child_management_childflaggedhistory 
                                    where active = 2
                                ) as cfh on cfh.child_id = cc.id and cfh.flagging_num = 1"""
        ),
    ]   
